/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createFastEndpointsProblemDetailsFromDiscriminatorValue, createFbsWebApiDtosBookingWithUserFromDiscriminatorValue, createFbsWebApiEntitiesBookingFromDiscriminatorValue, serializeFbsWebApiEndpointsBookingByIdPostRequest, serializeFbsWebApiEntitiesBooking, type FastEndpointsProblemDetails, type FbsWebApiDtosBookingWithUser, type FbsWebApiEndpointsBookingByIdPostRequest, type FbsWebApiEntitiesBooking } from '../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /Booking/{id}
 */
export interface BookingItemRequestBuilder extends BaseRequestBuilder<BookingItemRequestBuilder> {
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<FbsWebApiDtosBookingWithUser>}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<FbsWebApiDtosBookingWithUser | undefined>;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<FbsWebApiDtosBookingWithUser>}
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<FbsWebApiDtosBookingWithUser | undefined>;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<FbsWebApiEntitiesBooking>}
     * @throws {FastEndpointsProblemDetails} error when the service returns a 400 status code
     */
     post(body: FbsWebApiEndpointsBookingByIdPostRequest, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<FbsWebApiEntitiesBooking | undefined>;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: FbsWebApiEndpointsBookingByIdPostRequest, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const BookingItemRequestBuilderUriTemplate = "{+baseurl}/Booking/{id}";
/**
 * Metadata for all the requests in the request builder.
 */
export const BookingItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: BookingItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createFbsWebApiDtosBookingWithUserFromDiscriminatorValue,
    },
    get: {
        uriTemplate: BookingItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createFbsWebApiDtosBookingWithUserFromDiscriminatorValue,
    },
    post: {
        uriTemplate: BookingItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            400: createFastEndpointsProblemDetailsFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createFbsWebApiEntitiesBookingFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeFbsWebApiEndpointsBookingByIdPostRequest,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */

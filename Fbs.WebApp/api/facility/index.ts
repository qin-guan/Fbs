/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createFbsWebApiDtosFacilityFromDiscriminatorValue, type FbsWebApiDtosFacility } from '../models/index.js';
// @ts-ignore
import { type WithNameItemRequestBuilder, WithNameItemRequestBuilderNavigationMetadata } from './item/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /Facility
 */
export interface FacilityRequestBuilder extends BaseRequestBuilder<FacilityRequestBuilder> {
    /**
     * Gets an item from the ApiSdk.Facility.item collection
     * @param name Unique identifier of the item
     * @returns {WithNameItemRequestBuilder}
     */
     byName(name: string) : WithNameItemRequestBuilder;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<FbsWebApiDtosFacility[]>}
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<FbsWebApiDtosFacility[] | undefined>;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const FacilityRequestBuilderUriTemplate = "{+baseurl}/Facility";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const FacilityRequestBuilderNavigationMetadata: Record<Exclude<keyof FacilityRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byName: {
        navigationMetadata: WithNameItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["name"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const FacilityRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: FacilityRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "sendCollection",
        responseBodyFactory:  createFbsWebApiDtosFacilityFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
